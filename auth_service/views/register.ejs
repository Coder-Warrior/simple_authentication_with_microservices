<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        /* Background and Container Styling */
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #ff7e5f, #feb47b);
            overflow: hidden;
        }

        .form-container {
            background-color: white;
            padding: 40px 60px;
            border-radius: 15px;
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 100%;
            max-width: 400px;
            position: relative;
            overflow: hidden;
            transition: transform 0.4s;
        }

        /* Animations */
        .form-container:hover {
            transform: scale(1.05);
        }

        .form-container::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: -100%;
            background: rgba(255, 125, 85, 0.1);
            animation: slideBg 5s infinite;
        }

        @keyframes slideBg {
            0% { left: -100%; }
            50% { left: 0; }
            100% { left: 100%; }
        }

        h2 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
            position: relative;
        }

        /* Input Fields */
        .input-group {
            position: relative;
            margin-bottom: 25px;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            width: 100%;
        }

        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            outline: none;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        input[type="text"]:focus,
        input[type="email"]:focus,
        input[type="password"]:focus {
            border-color: #ff7e5f;
        }

        /* Submit Button */
        .submit-btn {
            width: 100%;
            padding: 12px;
            border: none;
            background: #ff7e5f;
            color: white;
            font-size: 18px;
            font-weight: bold;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s ease, transform 0.3s;
        }

        .submit-btn:hover {
            background: #feb47b;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .submit-btn:active {
            transform: translateY(0);
            box-shadow: none;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Register</h2>
        <form id="registerForm">
            <div class="input-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username">
            </div>
            <div class="input-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email">
            </div>
            <div class="input-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password">
            </div>
            <button type="submit" class="submit-btn">Register</button>
        </form>
    </div>

    <script>
        document.getElementById('registerForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission

            // Capture form data
            const formData = {
                username: document.getElementById('username').value,
                email: document.getElementById('email').value,
                password: document.getElementById('password').value
            };

            // Send data to the backend in JSON format
            fetch('/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.userId) {
                    

          async function discoverService(serviceName) {
            try {
                const discoveryResponse = await fetch(`http://localhost:3003/getServiceUrl/${serviceName}`);
                const discoveryResponseData = await discoveryResponse.json();
                if (discoveryResponseData.serviceUrl) {
                    return discoveryResponseData.serviceUrl;
                } else {
                    console.log(data);
                }
            } catch (e) {
                console.log(e);
            }
        }
          
          // Example usage to discover a service named "main_page_service"
          discoverService('main_page_service')
              .then(serviceUrl => {
                console.log(serviceUrl);
                window.location.assign(serviceUrl);
            })
              .catch(error => {
                  console.error('Service discovery failed:', error);
              });

                } else {
                    for (let i = 0; i < Object.values(data.errors).length; i++) {
                    if (Object.values(data.errors)[i]) {
                        alert(Object.values(data.errors)[i]);
                    }
                }
                }
            })
            .catch(error => {
                console.log(error)
            });
        });
    </script>
</body>
</html>
